# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
        self.max_sum = float('-inf')  # 全域最大值

        def dfs(node):
            if not node:
                return 0
            
            # 左右子樹最大值（如果為負就不要加）
            left = max(dfs(node.left), 0)
            right = max(dfs(node.right), 0)

            # 計算以當前節點為彎點的最大值
            current_max = node.val + left + right
            self.max_sum = max(self.max_sum, current_max)

            # 回傳單邊最大值，不能同時選左右（會重複）
            return node.val + max(left, right)

        dfs(root)
        return self.max_sum


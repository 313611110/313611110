class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        # 如果遇到空節點，或是遇到 p 或 q，就回傳該節點
        if not root or root == p or root == q:
            return root

        # 往左子樹和右子樹遞迴尋找
        left = self.lowestCommonAncestor(root.left, p, q)
        right = self.lowestCommonAncestor(root.right, p, q)

        # 如果 p 和 q 分別在左右子樹，則 root 就是 LCA
        if left and right:
            return root

        # 否則只會有一邊不為空，回傳該邊（代表兩個目標都在那邊）
        return left if left else right

